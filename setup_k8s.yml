---
- name: test connection
  hosts: nodes
  become: yes
  tasks:
  - name: ping
    ping:

- name: hostname node1
  hosts: rename
  become: yes
  tasks:
  - name: set a hostname
    hostname:
      name: "{{ new_hostname }}"

- name: setup k8s
  hosts: nodes
  become: yes
  tasks:
  - name: ping
    ping: 
  - name: install docker
    apt: name=docker.io state=latest
  - name: create dir 
    file: 
      state: directory
      recurse: yes
      path: /etc/docker
  - name: create file
    copy:
      dest: /etc/docker/daemon.json
      content: |
        {
        "exec-opts": ["native.cgroupdriver=systemd"],
        "log-driver": "json-file",
        "log-opts": {
        "max-size": "100m"
        },
        "storage-driver": "overlay2"
        }
  - name: restart docker service
    service:
      name: docker
      state: restarted
  - name: swap off
    command: swapoff --all
  - name: delete string
    lineinfile:
      dest: /etc/fstab 
      state: absent 
      regexp: "^/swap.img"
  - name: EOF /etc/modules-load.d/k8s.conf
    copy:
      dest: /etc/modules-load.d/k8s.conf
      content: |
        br_netfilter
  - name: EOF /etc/sysctl.d/k8s.conf
    copy:
      dest: /etc/sysctl.d/k8s.conf
      content: |
        cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
        net.bridge.bridge-nf-call-ip6tables = 1
        net.bridge.bridge-nf-call-iptables = 1
  - name: sysctl --system
    command: sysctl --system
  - name: update
    apt:
      update_cache: yes
  - name: install apt-transport-https
    apt: name=apt-transport-https state=latest
  - name: install ca-certificates
    apt: name=ca-certificates state=latest
  - name: install curl
    apt: name=curl state=latest
  - name: add repo 1
    get_url:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      dest: /usr/share/keyrings/kubernetes-archive-keyring.gpg
  - name: add repo 2
    copy:
      dest: /etc/apt/sources.list.d/kubernetes.list
      content:
        deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main
  - name: update 2
    apt:
      update_cache: yes
  - name: install kubelet kubeadm kubectl
    apt:
      name:
        - kubelet
        - kubeadm
        - kubectl
      state: latest
  - name: hold kubelet kubeadm kubectl
    command: apt-mark hold kubelet kubeadm kubectl

